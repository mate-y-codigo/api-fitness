// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ConfigRutina.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ConfigRutina.Infrastructure.Migrations
{
    [DbContext(typeof(ConfigRutinaDB))]
    partial class ConfigRutinaDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ConfigRutina.Domain.Entities.CategoriaEjercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.HasKey("Id");

                    b.ToTable("CategoriaEjercicio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Movilidad"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Calentamiento"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Fuerza"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Hipertrofia"
                        });
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.Ejercicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("BOOL");

                    b.Property<string>("GrupoMuscular")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("IdCategoriaEjercicio")
                        .HasColumnType("integer");

                    b.Property<string>("MusculoPrincipal")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("UrlDemo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaEjercicio");

                    b.ToTable("Ejercicio", (string)null);
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.EjercicioSesion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Descanso")
                        .HasColumnType("INT");

                    b.Property<Guid>("IdEjercicio")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdSesionEntrenamiento")
                        .HasColumnType("uuid");

                    b.Property<int>("Orden")
                        .HasColumnType("INT");

                    b.Property<float>("PesoObjetivo")
                        .HasColumnType("FLOAT");

                    b.Property<int>("RepeticionesObjetivo")
                        .HasColumnType("INT");

                    b.Property<int>("SeriesObjetivo")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("IdEjercicio");

                    b.HasIndex("IdSesionEntrenamiento");

                    b.ToTable("EjercicioSesion", (string)null);
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.PlanEntrenamiento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("BOOL");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsPlantilla")
                        .HasColumnType("BOOL");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("TIMESTAMPTZ");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TIMESTAMPTZ");

                    b.Property<Guid>("IdEntrenador")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("PlanEntrenamiento", (string)null);
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.SesionEntrenamiento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdPlanEntrenamiento")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("INT");

                    b.HasKey("Id");

                    b.HasIndex("IdPlanEntrenamiento");

                    b.ToTable("SesionEntrenamiento", (string)null);
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.Ejercicio", b =>
                {
                    b.HasOne("ConfigRutina.Domain.Entities.CategoriaEjercicio", "CategoriaEjercicioEn")
                        .WithMany("EjercicioLista")
                        .HasForeignKey("IdCategoriaEjercicio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaEjercicioEn");
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.EjercicioSesion", b =>
                {
                    b.HasOne("ConfigRutina.Domain.Entities.Ejercicio", "EjercicioEn")
                        .WithMany("EjercicioSesionLista")
                        .HasForeignKey("IdEjercicio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConfigRutina.Domain.Entities.SesionEntrenamiento", "SesionEntrenamientoEn")
                        .WithMany("EjercicioSesionLista")
                        .HasForeignKey("IdSesionEntrenamiento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EjercicioEn");

                    b.Navigation("SesionEntrenamientoEn");
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.SesionEntrenamiento", b =>
                {
                    b.HasOne("ConfigRutina.Domain.Entities.PlanEntrenamiento", "PlanEntrenamientoEn")
                        .WithMany("SesionEntrenamientoLista")
                        .HasForeignKey("IdPlanEntrenamiento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlanEntrenamientoEn");
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.CategoriaEjercicio", b =>
                {
                    b.Navigation("EjercicioLista");
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.Ejercicio", b =>
                {
                    b.Navigation("EjercicioSesionLista");
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.PlanEntrenamiento", b =>
                {
                    b.Navigation("SesionEntrenamientoLista");
                });

            modelBuilder.Entity("ConfigRutina.Domain.Entities.SesionEntrenamiento", b =>
                {
                    b.Navigation("EjercicioSesionLista");
                });
#pragma warning restore 612, 618
        }
    }
}
